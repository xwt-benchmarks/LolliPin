apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 2
        versionName VERSION_NAME
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        checkTypes {
            javaCompileOptions.annotationProcessorOptions.
                    classNames.add("org.checkerframework.checker.crypto.CryptoChecker")
            // Uncomment to do the strongboxbacked checking.
            // javaCompileOptions.annotationProcessorOptions.arguments.put("lint", "strongboxbacked")
            javaCompileOptions.annotationProcessorOptions.arguments.put("stubs", "hardwarebacked.astub")
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

configurations {
    errorproneJavac {
        description = 'required to run the Checker Framework.'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //RippleView
    implementation 'com.github.traex.rippleeffect:ripple:1.3.1-OG'
    //TypefaceView
    implementation 'com.github.omadahealth.typefaceview:typefaceview:1.5.0@aar' //TypefaceTextView

    //Compat
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'

    ext.checkerFrameworkVersion = '3.1.1'
    annotationProcessor "org.checkerframework:crypto-checker:0.1-SNAPSHOT"
    implementation files("../../../../crypto-checker-qual-android/build/libs/crypto-checker-qual-android.jar")
    compileOnly "org.checkerframework:checker-qual-android:${checkerFrameworkVersion}"
    errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'
}
repositories {
    mavenLocal()
    maven {
        url 'https://maven.google.com'
        // Alternative URL is 'https://dl.google.com/dl/android/maven2/'
    }
}

//gradle clean build uploadArchives
apply from: 'https://raw.github.com/omadahealth/omada-nexus/master/gradle-mvn-push/gradle-mvn-push.gradle'

gradle.projectsEvaluated {
    tasks.withType(JavaCompile).all { compile ->
        if (compile.name.contains("CheckTypes")) {
            options.fork = true
            options.forkOptions.jvmArgs += ["-Xbootclasspath/p:${configurations.errorproneJavac.asPath}"]
        }
    }
}

//task androidSourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.sourceFiles
//}
//artifacts {
//    archives androidSourcesJar
//}
//
//apply plugin: 'maven'
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            repository(url: uri("../../omada-nexus/release"))
//            snapshotRepository(url: uri("../../omada-nexus/release"))
//            pom.groupId = GROUP
//            pom.artifactId = POM_ARTIFACT_ID
//            pom.version = VERSION_NAME
//        }
//    }
//}
